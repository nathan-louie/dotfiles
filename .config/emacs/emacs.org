#+TITLE: Emacs Literate Configuration
#+AUTHOR: Nathan Louie
#+DESCRIPTION: My personal Emacs configuration as a literate Org file
#+STARTUP: overview
#+PROPERTY: header-args :tangle "init.el"

*** Why Emacs?

I mean... why not? Emacs is far older than I am and seems like it'll stick around for a while longer.

1. I can use ELisp and Lispy languages are cool
2. Emacs is stable, albeit slow
3. Each package has its own niche and does it well

At the end of the day, I want mastery over the tools that I use, and I want to have fun doing so.

*** Why a literate configuration?

I'm going to forgot why I put things into my configuration. This is a gift for my future self.

Use =C-c C-c= to evaluate code blocks and =C-c C-v C-t= to tangle the file.

#+begin_src emacs-lisp :tangle no :results none
(org-babel-tangle)
#+end_src

*** Why emacs-mac over emacs-plus?

1. It generally feels more like a native OSX citizen (frames, pixels, scrolling, display)
2. The latest Emacs branch doesn't appeal to me, I'm fine using 29.X
3. I don't use emacsclient

* =early-init.el=
:PROPERTIES:
:CUSTOM_ID: early-init
:END:

The [[file:early-init.el][file]] that contains customizations that need to take effect during Emacs startup earlier than the normal =init.el= file. Customizations related to GUI features will not work reliably in =early-init.el=, but if needed use hooks to do so.

See the Elpaca setup for more details.

#+begin_src emacs-lisp :tangle "early-init.el"
  (setq package-enable-at-startup nil)
#+end_src

Disable =site-start= and =default= files, and maximize the garbage collection threshold during startup to boot faster. Then, reset the garbage collection limit.

#+begin_src emacs-lisp :tangle "early-init.el"
  (setq site-run-file nil
		inhibit-default-init t
		gc-cons-threshold most-positive-fixnum
		gc-cons-percentage 0.5)

  (add-hook 'after-init-hook
			#'(lambda () (setq gc-cons-threshold (* 8 1024 1024)
							   gc-cons-percentage 0.1)))
#+end_src
